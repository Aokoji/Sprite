using System.Collections.Generic;using UnityEditor;using System;public class Config_t_ExplorMapHelp : AssetData{	public List<t_ExplorMapHelp> asset = new List<t_ExplorMapHelp>();	public void addContent(t_ExplorMapHelp item)	{		asset.Add(item);	}	public static bool isloaded;	public static Dictionary<int, t_ExplorMapHelp> _data { get; private set; }	public void init()	{		_data = new Dictionary<int, t_ExplorMapHelp>();		for (int i = 0; i < asset.Count; i++){			_data.Add(asset[i].id, asset[i]);		}		asset = null;		isloaded = true;	}	public static t_ExplorMapHelp getOne(int id)	{		if (_data.ContainsKey(id))			return _data[id];		else			throw new Exception("not find" + id);	}	public static void Dispose()	{		_data = null;	}}[Serializable]public class t_ExplorMapHelp{	public int id;	public int mapwidth;	public int mapheight;	public string pointNumber;	public string rewardNumber;	public string remark;	public string connection;	public int startPos;	public int bossPos;	public string boxPool;	public string enemyPool;	public string gatherPool;	public string bossPool;}