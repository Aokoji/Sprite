using System.Collections.Generic;using UnityEditor;using System;public class Config_t_quest : AssetData{	public List<t_quest> asset = new List<t_quest>();	public void addContent(t_quest item)	{		asset.Add(item);	}	public static bool isloaded;	public static Dictionary<int, t_quest> _data { get; private set; }	public void init()	{		_data = new Dictionary<int, t_quest>();		for (int i = 0; i < asset.Count; i++){			_data.Add(asset[i].id, asset[i]);		}		asset = null;		isloaded = true;	}	public static t_quest getOne(int id)	{		if (_data.ContainsKey(id))			return _data[id];		else			throw new Exception("not find" + id);	}	public static void Dispose()	{		_data = null;	}}[Serializable]public class t_quest{	public int id;	public string sname;	public string describe;	public int type;	public string need;	public string needCount;	public int aliveTime;	public int fromSquare;	public string fromActor;	public string rewards;	public string rewardnum;	public int ranklevel;}